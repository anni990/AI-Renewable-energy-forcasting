name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_IMAGE_NAME: renewable-energy-app
  AZURE_VM_RESOURCE_GROUP: renewable-energy-rg  # Your resource group
  AZURE_VM_NAME: renewable-energy-vm            # Your VM name

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests
      run: |
        # Add your test commands here
        python -m pytest tests/ || echo "No tests found, skipping..."
    
    - name: Lint with flake8
      run: |
        pip install flake8
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics || echo "Linting completed with warnings"

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest
          ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Azure VM
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.AZURE_VM_HOST }}
        username: ${{ secrets.AZURE_VM_USERNAME }}
        key: ${{ secrets.AZURE_VM_SSH_KEY }}
        script: |
          # Stop existing container
          sudo docker stop renewable-energy-app || true
          sudo docker rm renewable-energy-app || true
          
          # Pull latest image
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest
          
          # Create .env file with secrets
          echo "AZURE_SQL_SERVER=${{ secrets.AZURE_SQL_SERVER }}" > .env
          echo "AZURE_SQL_USERNAME=${{ secrets.AZURE_SQL_USERNAME }}" >> .env
          echo "AZURE_SQL_PASSWORD=${{ secrets.AZURE_SQL_PASSWORD }}" >> .env
          echo "AZURE_SQL_DATABASE=${{ secrets.AZURE_SQL_DATABASE }}" >> .env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          
          # Run new container
          sudo docker run -d \
            --name renewable-energy-app \
            --restart unless-stopped \
            -p 80:5000 \
            --env-file .env \
            ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest
          
          # Clean up old images
          sudo docker image prune -f
          
          # Remove .env file for security
          rm -f .env
